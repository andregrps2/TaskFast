#!/usr/bin/env python3
"""
Demonstra√ß√£o Visual dos Temas do TaskFast
Mostra como cada tema aparece na pr√°tica com tarefas de exemplo.
"""

from config import (
    obter_simbolos_tema, obter_textos_tema, alterar_tema, 
    listar_temas, TEMA_ATUAL
)

def demonstrar_tema(nome_tema):
    """Demonstra visualmente como fica um tema espec√≠fico"""
    alterar_tema(nome_tema)
    simbolos = obter_simbolos_tema()
    textos = obter_textos_tema()
    
    print(f"\n{'='*60}")
    print(f"üé® {nome_tema.upper()}")
    print(f"{'='*60}")
    
    # T√≠tulo do tema
    print(f"\n{textos.TITULO_PRINCIPAL}")
    print(simbolos.SEPARADOR_LINHA[:40])
    
    # Lista de tarefas de exemplo
    print(f"\nLISTA DE TAREFAS:")
    print(f"{simbolos.PONTEIRO_SELECAO}Tarefa atual selecionada")
    print(f"  {simbolos.FORMATO_CONCLUIDA} Tarefa j√° conclu√≠da")
    print(f"  {simbolos.FORMATO_PENDENTE} Tarefa pendente")
    print(f"  {simbolos.FORMATO_PENDENTE} Revisar c√≥digo do projeto")
    print(f"{simbolos.MARCA_TEMA}{simbolos.FORMATO_PENDENTE} Tarefa marcada para a√ß√£o")
    print(f"  {simbolos.FORMATO_CONCLUIDA} Enviar relat√≥rio")
    print(f"  {simbolos.FORMATO_PENDENTE} Agendar reuni√£o")
    
    # Indicadores de navega√ß√£o
    print(f"\nNAVEGA√á√ÉO:")
    print(f"  {simbolos.SETA_ESQUERDA} Dia anterior    {simbolos.SETA_DIREITA} Pr√≥ximo dia")
    print(f"  {simbolos.SETA_CIMA} Tarefa acima     {simbolos.SETA_BAIXO} Tarefa abaixo")
    
    # Labels de status
    print(f"\nLEGENDA:")
    print(f"  {textos.LABEL_CONCLUIDA}")
    print(f"  {textos.LABEL_HOJE}")
    print(f"  {textos.LABEL_PASSADO}")
    print(f"  {textos.LABEL_FUTURO}")

def main():
    print("üé≠ DEMONSTRA√á√ÉO VISUAL DOS TEMAS DO TASKFAST")
    print("=" * 60)
    print("Veja como cada tema aparece na pr√°tica:")
    
    tema_original = TEMA_ATUAL
    temas = listar_temas()
    
    # Demonstra cada tema
    for nome_tema, descricao in temas:
        demonstrar_tema(nome_tema)
        print(f"\nDescri√ß√£o: {descricao}")
    
    # Restaura tema original
    alterar_tema(tema_original)
    
    print(f"\n{'='*60}")
    print("üéØ RESUMO DAS DIFEREN√áAS ENTRE TEMAS:")
    print("=" * 60)
    
    print("\nüìã PADR√ÉO:")
    print("  ‚Ä¢ S√≠mbolos cl√°ssicos [‚úì] [ ]")
    print("  ‚Ä¢ Ponteiros tradicionais ‚ñ∫ ‚óè")
    print("  ‚Ä¢ Estilo familiar e intuitivo")
    
    print("\nüåô ESCURO (Cyberpunk):")
    print("  ‚Ä¢ S√≠mbolos geom√©tricos ‚óÜ‚óâ ‚óá‚óã")
    print("  ‚Ä¢ Ponteiros angulares ‚ñ∏ ‚ñ™")
    print("  ‚Ä¢ Visual futurista e moderno")
    
    print("\n‚òÄÔ∏è CLARO (Moderno):")
    print("  ‚Ä¢ S√≠mbolos elegantes ‚ü®‚úî‚ü© ‚ü®‚óã‚ü©")  
    print("  ‚Ä¢ Ponteiros direcionais ‚áí ‚ó¶")
    print("  ‚Ä¢ Design limpo e sofisticado")
    
    print("\nüéØ MINIMAL (Simples):")
    print("  ‚Ä¢ S√≠mbolos b√°sicos (x) ( )")
    print("  ‚Ä¢ Ponteiros minimalistas * -")
    print("  ‚Ä¢ M√°xima simplicidade e clareza")
    
    print(f"\n{'='*60}")
    print("‚ú® Cada tema oferece uma experi√™ncia visual √∫nica!")
    print("üîÑ Use Shift+T no programa principal para alternar")
    print("=" * 60)

if __name__ == "__main__":
    main()